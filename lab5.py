# Джафаров Рустам Расимович. Группа ИУ7-16Б. Варинат № 36
# Программа вычисляющая сумму рядя 
# y = 1/(1*3) + 1/(3*5) + ... + 1/((2n - 1)*(2n + 1))
# с некоторой точностью и количеством итераций

# Подключаем модули
from math import isclose

# Блок ввода
iteration = int(input("Введите количество итераций: "))
step = int(input("Введите шаг: "))
eps = float(input("Введите с какой точностью хотите посчитать ряд: "))

# Проверка на корректность ввода
while True:
    if isclose(eps, 0) or eps < 0:
        print("Точность не может быть меньше или равна нулю")
        eps = float(input("Введите с, какой точностью хотите посчитать ряд: "))
    elif isclose(step, 0) or step < 0:
        print("Шаг не может быть меньше или равен нулю а также дробным")
        step = float(input("Введите шаг: "))
    elif iteration <= 0:
        print("Количество итераций не может быть отрицательным,\
дробным или нулем")
        iteration = int(input("Введите количество итераций: "))
    else: 
        break

length = 46 # Ширина таблицы

# Вывод шапки таблицы
print("-" * length, 
      f"| {'№ итерации':^12} | {'Значение':^12} | {'Сумма':^12} |", 
      "-" * length, 
      sep='\n')

sum_now = 0         # Сумма на текущей итерации
num = 0            # Номер итерации
y_now = 1/3         # Значение элемена ряда на текущей итерации
flag = iteration

print(f"| {(num + 1):^12} | {y_now:^12.7g} | {(1/3):^12.7g} |")
# Считаем ряд
while y_now >= eps and flag != 1:
    y_now = 1/((2*(num + 1) - 1)*(2*(num + 1) + 1))
    sum_now += y_now
    num += 1
    if (num + 1) % step == 0: 
        print(f"| {(num + 1):^12} | {y_now:^12.7g} | {sum_now:^12.7g} |")
    flag -= 1
print("-" * length)

# Обработка случаев, которые могут возникнуть вовремя работы  
if flag != 0:
    print(f"Сумма бесконечного ряда равна: {sum_now:.7g}",
    f"Вычеслена за {num + 1} итераций",
    f"Точность вычислений {eps}",
    sep='\n')
else:
    print("При таком количестве итераций невозможно достичь указанной точности")
